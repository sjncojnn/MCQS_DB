@model Mcq.Models.UpdateQuestionViewModel

<h2>Update Question</h2>

<form asp-action="UpdateQuestion" method="post">
    <input type="hidden" asp-for="Idquestion" />
    <input type="hidden" asp-for="Idexam" />

    <div>
        <label>Content</label>
        <textarea asp-for="Content" required></textarea>
    </div>

    <div>
        <label>Difficulty Level</label>
        <input type="text" asp-for="DifficultyLevel" required />
    </div>

    <h3>Options</h3>
    <div id="options-container">
        @for (int i = 0; i < Model.Options.Count; i++)
        {
            <div class="option">
                <label>Option Content</label>
                <input type="text" name="Options[@i].OptionContent" value="@Model.Options[i].OptionContent" required />

                <input type="checkbox" name="Options[@i].IsCorrect" value="true" @(Model.Options[i].IsCorrect ? "checked" : "") />

                <label>Explanation</label>
                <textarea name="Options[@i].Explanation" required>@Model.Options[i].Explanation</textarea>
            </div>
        }
    </div>

    <button type="button" id="add-option">Add Option</button>
    <button type="submit">Update Question</button>
</form>

<script>
    let optionIndex = @Model.Options.Count;

    // Logic to add new options dynamically
    document.getElementById('add-option').addEventListener('click', function () {
        const container = document.getElementById('options-container');
        const newOption = `
            <div class="option">
                <label>Option Content</label>
                <input type="text" name="Options[${optionIndex}].OptionContent" required />

                <input type="checkbox" name="Options[${optionIndex}].IsCorrect" value="true" />

                <label>Explanation</label>
                <textarea name="Options[${optionIndex}].Explanation" required></textarea>
            </div>
        `;
        container.insertAdjacentHTML('beforeend', newOption);
        optionIndex++;
    });
</script>

<style>
    /* CSS để tách biệt các phần tử trong form */
    .question {
        margin-bottom: 20px;
        padding: 10px;
        border: 1px solid #ccc;
    }

    .question h3 {
        margin-top: 0;
    }

    .error-messages {
        background-color: #ffdddd;
        padding: 10px;
        margin-bottom: 20px;
    }

    .error-messages ul {
        margin: 0;
        padding: 0;
        list-style-type: none;
    }

    .error-messages li {
        color: #d8000c;
    }

    .options {
        margin-top: 10px;
    }

    .option {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

    .option input[type="text"], .option textarea {
        margin-right: 10px;
    }

    .option label {
        margin-right: 10px;
    }

    .add-option {
        margin-top: 10px;
    }

    #add-question {
        margin-top: 20px;
    }
</style>
