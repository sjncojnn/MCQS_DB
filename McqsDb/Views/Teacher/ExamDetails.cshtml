@model Mcq.Models.Exam

<h2>Exam: @Model.Name</h2>

<p><strong>Duration:</strong> @Model.Duration minutes</p>
<p><strong>Number of Questions:</strong> @Model.number_of_question</p>

<h3>Questions</h3>
<table>
    <thead>
        <tr>
            <th>Content</th>
            <th>Difficulty Level</th>
            <th>Options</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var question in Model.Questions)
        {
            <tr>
                <td>@question.Content</td>
                <td>@question.difficulty_level</td>
                <td>
                    <ul class="option-list">
                        @foreach (var option in question.QuestionOptions)
                        {
                            <li class="option-item">
                                <div><strong>Content:</strong> @option.option_content</div>
                                <div><strong>Correct:</strong> @(option.IsCorrect ? "Yes" : "No")</div>
                                @if (!string.IsNullOrEmpty(option.Explanation))
                                {
                                    <div><strong>Explanation:</strong> @option.Explanation</div>
                                }
                            </li>
                        }
                    </ul>
                </td>
                <td>
                    <div class="action-buttons">
                        <form asp-action="UpdateQuestion" method="get" style="display:inline">
                            <input type="hidden" name="id" value="@question.Idquestion" />
                            <button type="submit" class="text-button">Update</button>
                        </form>
                        <form asp-action="DeleteQuestion" method="post" style="display:inline">
                            <input type="hidden" name="id" value="@question.Idquestion" />
                            <button type="submit" class="text-button" onclick="return confirm('Are you sure you want to delete this question?')">Delete</button>
                        </form>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<hr />

<h3>Add New Questions to Exam</h3>
<form asp-action="CreateQuestion" method="post">
    <input type="hidden" name="ExamId" value="@Model.Idexam" />

    <div id="questions-container">
        <div class="question">
            <h4>Question 1</h4>
            <label>Content</label>
            <textarea name="Questions[0].Content" required></textarea>
            
            <label>Difficulty Level</label>
            <select name="Questions[0].DifficultyLevel" required>
                <option value="Easy">Easy</option>
                <option value="Medium">Medium</option>
                <option value="Hard">Hard</option>
            </select>

            <label>Options</label>
            <div class="options" data-question-index="0">
                <div class="option-item">
                    <input type="text" name="Questions[0].Options[0].OptionContent" placeholder="Option Content" required />
                    <input type="hidden" name="Questions[0].Options[0].IsCorrect" value="false" />
                    <input type="checkbox" name="Questions[0].Options[0].IsCorrect" value="true" />
                    <textarea name="Questions[0].Options[0].Explanation" placeholder="Explanation"></textarea>
                </div>
            </div>
            <button type="button" class="add-option" data-question-index="0">Add Option</button>
        </div>
    </div>

    <button type="button" id="add-question">Add Question</button>
    <button type="submit">Finish</button>
</form>

<script>
    let questionIndex = 1;

    // Add new question
    document.getElementById('add-question').addEventListener('click', function () {
        const container = document.getElementById('questions-container');
        const newQuestion = `
            <div class="question">
                <h4>Question ${questionIndex + 1}</h4>
                <label>Content</label>
                <textarea name="Questions[${questionIndex}].Content" required></textarea>
                
                <label>Difficulty Level</label>
                <select name="Questions[${questionIndex}].DifficultyLevel" required>
                    <option value="Easy">Easy</option>
                    <option value="Medium">Medium</option>
                    <option value="Hard">Hard</option>
                </select>

                <label>Options</label>
                <div class="options" data-question-index="${questionIndex}">
                    <div class="option-item">
                        <input type="text" name="Questions[${questionIndex}].Options[0].OptionContent" placeholder="Option Content" required />
                        <input type="hidden" name="Questions[${questionIndex}].Options[0].IsCorrect" value="false" />
                        <input type="checkbox" name="Questions[${questionIndex}].Options[0].IsCorrect" value="true" />
                        <textarea name="Questions[${questionIndex}].Options[0].Explanation" placeholder="Explanation"></textarea>
                    </div>
                </div>
                <button type="button" class="add-option" data-question-index="${questionIndex}">Add Option</button>
            </div>
        `;
        container.insertAdjacentHTML('beforeend', newQuestion);
        questionIndex++;
    });

    // Add new option to a question
    document.addEventListener('click', function (event) {
        if (event.target.classList.contains('add-option')) {
            const questionIndex = event.target.dataset.questionIndex;
            const optionsContainer = document.querySelector(`.options[data-question-index="${questionIndex}"]`);
            const optionIndex = optionsContainer.children.length;
            const newOption = `
                <div class="option-item">
                    <input type="text" name="Questions[${questionIndex}].Options[${optionIndex}].OptionContent" placeholder="Option Content" required />
                    <input type="hidden" name="Questions[${questionIndex}].Options[${optionIndex}].IsCorrect" value="false" />
                    <input type="checkbox" name="Questions[${questionIndex}].Options[${optionIndex}].IsCorrect" value="true" />
                    <textarea name="Questions[${questionIndex}].Options[${optionIndex}].Explanation" placeholder="Explanation"></textarea>
                </div>
            `;
            optionsContainer.insertAdjacentHTML('beforeend', newOption);
        }
    });
</script>
<style>
/* General styles for the page */
body {
    font-family: Arial, sans-serif;
    line-height: 1.6;
    padding: 20px;
}

h2, h3, h4 {
    margin-bottom: 10px;
}

label {
    display: block;
    margin-top: 10px;
    margin-bottom: 5px;
}

/* Style for the form and its elements */
form {
    margin-top: 20px;
}

textarea, input[type="text"], select {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    margin-top: 5px;
    margin-bottom: 10px;
}

textarea {
    resize: vertical;
    min-height: 60px;
}

.option-list {
    list-style-type: none;
    padding: 0;
}

.option-item {
    border: 1px solid #ccc;
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 10px;
    background-color: #f9f9f9;
}

.option-item input[type="checkbox"] {
    margin-right: 5px;
}

button {
    padding: 10px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin-top: 10px;
}

button:hover {
    background-color: #0056b3;
}

#questions-container {
    margin-top: 20px;
}

.question {
    margin-bottom: 20px;
}

hr {
    border: 0;
    border-top: 1px solid #ccc;
    margin: 30px 0;
}
/* Text-style buttons */
.text-button {
    background: none;
    border: none;
    color: blue;
    cursor: pointer;
    font-size: 14px; /* Giảm kích thước font */
    line-height: 3; /* Đảm bảo không có khoảng cách thừa */
    padding: 1000; /* Loại bỏ toàn bộ padding */
    text-decoration: underline;
}

.text-button:hover {
    color: darkblue;
}



</style>