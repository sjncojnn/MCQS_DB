@model Mcq.Models.Exam

<h2>Exam: @Model.Name</h2>

<p><strong>Duration:</strong> @Model.Duration minutes</p>
<p><strong>Number of Questions:</strong> @Model.number_of_question</p>

<h3>Questions</h3>
<table>
    <thead>
        <tr>
            <th>Content</th>
            <th>Difficulty Level</th>
            <th>Options</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var question in Model.Questions)
        {
            <tr>
                <td>@question.Content</td>
                <td>@question.difficulty_level</td>
                <td>
                    <ul>
                        @foreach (var option in question.QuestionOptions)
                        {
                            <li>
                                @option.option_content 
                                @(option.IsCorrect ? "(Correct)" : "") 
                                @if (!string.IsNullOrEmpty(option.Explanation))
                                {
                                    <span> - @option.Explanation</span>
                                }
                            </li>
                        }
                    </ul>
                </td>
                <td>
                    <a asp-action="UpdateQuestion" asp-route-id="@question.Idquestion">Update</a>
                    <form asp-action="DeleteQuestion" method="post" style="display:inline">
                        <input type="hidden" name="id" value="@question.Idquestion" />
                        <button type="submit" onclick="return confirm('Are you sure you want to delete this question?')">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<hr />

<h3>Add New Questions to Exam</h3>
<form asp-action="CreateQuestion" method="post">
    <input type="hidden" name="ExamId" value="@Model.Idexam" />

    <div id="questions-container">
        <div class="question">
            <h4>Question 1</h4>
            <label>Content</label>
            <textarea name="Questions[0].Content" required></textarea>
            
            <label>Difficulty Level</label>
            <input type="text" name="Questions[0].DifficultyLevel" required />

            <label>Options</label>
            <div class="options" data-question-index="0">
                <div>
                    <input type="text" name="Questions[0].Options[0].OptionContent" placeholder="Option Content" required />
                    <input type="hidden" name="Questions[0].Options[0].IsCorrect" value="false" />
                    <input type="checkbox" name="Questions[0].Options[0].IsCorrect" value="true" />
                    <textarea name="Questions[0].Options[0].Explanation" placeholder="Explanation"></textarea>
                </div>
            </div>
            <button type="button" class="add-option" data-question-index="0">Add Option</button>
        </div>
    </div>

    <button type="button" id="add-question">Add Question</button>
    <button type="submit">Create Questions</button>
</form>

<script>
    let questionIndex = 1;

    // Add new question
    document.getElementById('add-question').addEventListener('click', function () {
        const container = document.getElementById('questions-container');
        const newQuestion = `
            <div class="question">
                <h4>Question ${questionIndex + 1}</h4>
                <label>Content</label>
                <textarea name="Questions[${questionIndex}].Content" required></textarea>
                
                <label>Difficulty Level</label>
                <input type="text" name="Questions[${questionIndex}].DifficultyLevel" required />

                <label>Options</label>
                <div class="options" data-question-index="${questionIndex}">
                    <div>
                        <input type="text" name="Questions[${questionIndex}].Options[0].OptionContent" placeholder="Option Content" required />
                        <input type="hidden" name="Questions[${questionIndex}].Options[0].IsCorrect" value="false" />
                        <input type="checkbox" name="Questions[${questionIndex}].Options[0].IsCorrect" value="true" />
                        <textarea name="Questions[${questionIndex}].Options[0].Explanation" placeholder="Explanation"></textarea>
                    </div>
                </div>
                <button type="button" class="add-option" data-question-index="${questionIndex}">Add Option</button>
            </div>
        `;
        container.insertAdjacentHTML('beforeend', newQuestion);
        questionIndex++;
    });

    // Add new option to a question
    document.addEventListener('click', function (event) {
        if (event.target.classList.contains('add-option')) {
            const questionIndex = event.target.dataset.questionIndex;
            const optionsContainer = document.querySelector(`.options[data-question-index="${questionIndex}"]`);
            const optionIndex = optionsContainer.children.length;
            const newOption = `
                <div>
                    <input type="text" name="Questions[${questionIndex}].Options[${optionIndex}].OptionContent" placeholder="Option Content" required />
                    <input type="hidden" name="Questions[${questionIndex}].Options[${optionIndex}].IsCorrect" value="false" />
                    <input type="checkbox" name="Questions[${questionIndex}].Options[${optionIndex}].IsCorrect" value="true" />
                    <textarea name="Questions[${questionIndex}].Options[${optionIndex}].Explanation" placeholder="Explanation"></textarea>
                </div>
            `;
            optionsContainer.insertAdjacentHTML('beforeend', newOption);
        }
    });
</script>
